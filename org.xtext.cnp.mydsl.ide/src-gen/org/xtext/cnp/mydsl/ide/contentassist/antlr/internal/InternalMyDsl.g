/*
 * generated by Xtext 2.9.0.rc1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.cnp.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.cnp.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.cnp.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getAlternatives()); }
		(rule__Class__Alternatives)
		{ after(grammarAccess.getClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractType
entryRuleAbstractType
:
{ before(grammarAccess.getAbstractTypeRule()); }
	 ruleAbstractType
{ after(grammarAccess.getAbstractTypeRule()); } 
	 EOF 
;

// Rule AbstractType
ruleAbstractType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeAccess().getAlternatives()); }
		(rule__AbstractType__Alternatives)
		{ after(grammarAccess.getAbstractTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassAttributes
entryRuleClassAttributes
:
{ before(grammarAccess.getClassAttributesRule()); }
	 ruleClassAttributes
{ after(grammarAccess.getClassAttributesRule()); } 
	 EOF 
;

// Rule ClassAttributes
ruleClassAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAttributesAccess().getGroup()); }
		(rule__ClassAttributes__Group__0)
		{ after(grammarAccess.getClassAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrganizationalModel
entryRuleOrganizationalModel
:
{ before(grammarAccess.getOrganizationalModelRule()); }
	 ruleOrganizationalModel
{ after(grammarAccess.getOrganizationalModelRule()); } 
	 EOF 
;

// Rule OrganizationalModel
ruleOrganizationalModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrganizationalModelAccess().getGroup()); }
		(rule__OrganizationalModel__Group__0)
		{ after(grammarAccess.getOrganizationalModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgent
entryRuleAgent
:
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentAccess().getGroup()); }
		(rule__Agent__Group__0)
		{ after(grammarAccess.getAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTasksModel
entryRuleTasksModel
:
{ before(grammarAccess.getTasksModelRule()); }
	 ruleTasksModel
{ after(grammarAccess.getTasksModelRule()); } 
	 EOF 
;

// Rule TasksModel
ruleTasksModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTasksModelAccess().getGroup()); }
		(rule__TasksModel__Group__0)
		{ after(grammarAccess.getTasksModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractNetProtocol
entryRuleContractNetProtocol
:
{ before(grammarAccess.getContractNetProtocolRule()); }
	 ruleContractNetProtocol
{ after(grammarAccess.getContractNetProtocolRule()); } 
	 EOF 
;

// Rule ContractNetProtocol
ruleContractNetProtocol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractNetProtocolAccess().getGroup()); }
		(rule__ContractNetProtocol__Group__0)
		{ after(grammarAccess.getContractNetProtocolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoleBehavior
entryRuleRoleBehavior
:
{ before(grammarAccess.getRoleBehaviorRule()); }
	 ruleRoleBehavior
{ after(grammarAccess.getRoleBehaviorRule()); } 
	 EOF 
;

// Rule RoleBehavior
ruleRoleBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getGroup()); }
		(rule__RoleBehavior__Group__0)
		{ after(grammarAccess.getRoleBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeValue
entryRuleAttributeValue
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeValueAccess().getGroup()); }
		(rule__AttributeValue__Group__0)
		{ after(grammarAccess.getAttributeValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getAlternatives()); }
		(rule__State__Alternatives)
		{ after(grammarAccess.getStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActivity
entryRuleActivity
:
{ before(grammarAccess.getActivityRule()); }
	 ruleActivity
{ after(grammarAccess.getActivityRule()); } 
	 EOF 
;

// Rule Activity
ruleActivity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActivityAccess().getGroup()); }
		(rule__Activity__Group__0)
		{ after(grammarAccess.getActivityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionStatement
entryRuleActionStatement
:
{ before(grammarAccess.getActionStatementRule()); }
	 ruleActionStatement
{ after(grammarAccess.getActionStatementRule()); } 
	 EOF 
;

// Rule ActionStatement
ruleActionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionStatementAccess().getGroup()); }
		(rule__ActionStatement__Group__0)
		{ after(grammarAccess.getActionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertStatement
entryRuleAssertStatement
:
{ before(grammarAccess.getAssertStatementRule()); }
	 ruleAssertStatement
{ after(grammarAccess.getAssertStatementRule()); } 
	 EOF 
;

// Rule AssertStatement
ruleAssertStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertStatementAccess().getGroup()); }
		(rule__AssertStatement__Group__0)
		{ after(grammarAccess.getAssertStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeStateStatement
entryRuleChangeStateStatement
:
{ before(grammarAccess.getChangeStateStatementRule()); }
	 ruleChangeStateStatement
{ after(grammarAccess.getChangeStateStatementRule()); } 
	 EOF 
;

// Rule ChangeStateStatement
ruleChangeStateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeStateStatementAccess().getGroup()); }
		(rule__ChangeStateStatement__Group__0)
		{ after(grammarAccess.getChangeStateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getAlternatives()); }
		(rule__Parameter__Alternatives)
		{ after(grammarAccess.getParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getClassParserRuleCall_0()); }
		ruleClass
		{ after(grammarAccess.getTypeAccess().getClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getStringKeyword_0()); }
		'String'
		{ after(grammarAccess.getDataTypeAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanKeyword_1()); }
		'boolean'
		{ after(grammarAccess.getDataTypeAccess().getBooleanKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntKeyword_2()); }
		'int'
		{ after(grammarAccess.getDataTypeAccess().getIntKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDoubleKeyword_3()); }
		'double'
		{ after(grammarAccess.getDataTypeAccess().getDoubleKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getAgentKeyword_0()); }
		'Agent'
		{ after(grammarAccess.getClassAccess().getAgentKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getTaskKeyword_1()); }
		'Task'
		{ after(grammarAccess.getClassAccess().getTaskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getContractKeyword_2()); }
		'Contract'
		{ after(grammarAccess.getClassAccess().getContractKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getBidKeyword_3()); }
		'Bid'
		{ after(grammarAccess.getClassAccess().getBidKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeAccess().getTypeAssignment_0()); }
		(rule__AbstractType__TypeAssignment_0)
		{ after(grammarAccess.getAbstractTypeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeAccess().getGroup_1()); }
		(rule__AbstractType__Group_1__0)
		{ after(grammarAccess.getAbstractTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getGroup_0()); }
		(rule__State__Group_0__0)
		{ after(grammarAccess.getStateAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getGroup_1()); }
		(rule__State__Group_1__0)
		{ after(grammarAccess.getStateAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Alternatives_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getElseifAssignment_8_1_0()); }
		(rule__Activity__ElseifAssignment_8_1_0)
		{ after(grammarAccess.getActivityAccess().getElseifAssignment_8_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getActivityAccess().getGroup_8_1_1()); }
		(rule__Activity__Group_8_1_1__0)
		{ after(grammarAccess.getActivityAccess().getGroup_8_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getEqualToAssignment_0()); }
		(rule__Operator__EqualToAssignment_0)
		{ after(grammarAccess.getOperatorAccess().getEqualToAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLargerThanAssignment_1()); }
		(rule__Operator__LargerThanAssignment_1)
		{ after(grammarAccess.getOperatorAccess().getLargerThanAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSmallerThanAssignment_2()); }
		(rule__Operator__SmallerThanAssignment_2)
		{ after(grammarAccess.getOperatorAccess().getSmallerThanAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLargerOrEqualToAssignment_3()); }
		(rule__Operator__LargerOrEqualToAssignment_3)
		{ after(grammarAccess.getOperatorAccess().getLargerOrEqualToAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSmallerOrEqualToAssignment_4()); }
		(rule__Operator__SmallerOrEqualToAssignment_4)
		{ after(grammarAccess.getOperatorAccess().getSmallerOrEqualToAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getNotEqualToAssignment_5()); }
		(rule__Operator__NotEqualToAssignment_5)
		{ after(grammarAccess.getOperatorAccess().getNotEqualToAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAndAssignment_1_0_0()); }
		(rule__Condition__AndAssignment_1_0_0)
		{ after(grammarAccess.getConditionAccess().getAndAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOrAssignment_1_0_1()); }
		(rule__Condition__OrAssignment_1_0_1)
		{ after(grammarAccess.getConditionAccess().getOrAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssertStatementAssignment_2()); }
		(rule__Statement__AssertStatementAssignment_2)
		{ after(grammarAccess.getStatementAccess().getAssertStatementAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_0_0()); }
		(rule__Expression__Group_1_0_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_0_1()); }
		(rule__Expression__Group_1_0_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getGroup_1_0_0()); }
		(rule__Term__Group_1_0_0__0)
		{ after(grammarAccess.getTermAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getGroup_1_0_1()); }
		(rule__Term__Group_1_0_1__0)
		{ after(grammarAccess.getTermAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getNumberAssignment_0()); }
		(rule__Factor__NumberAssignment_0)
		{ after(grammarAccess.getFactorAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getVariableAssignment_1()); }
		(rule__Factor__VariableAssignment_1)
		{ after(grammarAccess.getFactorAccess().getVariableAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getStringAssignment_2()); }
		(rule__Factor__StringAssignment_2)
		{ after(grammarAccess.getFactorAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getBooleanAssignment_3()); }
		(rule__Factor__BooleanAssignment_3)
		{ after(grammarAccess.getFactorAccess().getBooleanAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_4()); }
		(rule__Factor__Group_4__0)
		{ after(grammarAccess.getFactorAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1()); }
		RULE_DOUBLE
		{ after(grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getParameterAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getSTRINGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getIDTerminalRuleCall_2()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getIDTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getBOOLEANTerminalRuleCall_3()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getParameterAccess().getBOOLEANTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAgentAttributesKeyword_0()); }
	'AgentAttributes'
	{ after(grammarAccess.getModelAccess().getAgentAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAgentAttributesAssignment_1()); }
	(rule__Model__AgentAttributesAssignment_1)
	{ after(grammarAccess.getModelAccess().getAgentAttributesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTaskAttributesKeyword_2()); }
	'TaskAttributes'
	{ after(grammarAccess.getModelAccess().getTaskAttributesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTaskAttributesAssignment_3()); }
	(rule__Model__TaskAttributesAssignment_3)
	{ after(grammarAccess.getModelAccess().getTaskAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getBidAttributesKeyword_4()); }
	'BidAttributes'
	{ after(grammarAccess.getModelAccess().getBidAttributesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getBidAttributesAssignment_5()); }
	(rule__Model__BidAttributesAssignment_5)
	{ after(grammarAccess.getModelAccess().getBidAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractAttributesKeyword_6()); }
	'ContractAttributes'
	{ after(grammarAccess.getModelAccess().getContractAttributesKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractAttributesAssignment_7()); }
	(rule__Model__ContractAttributesAssignment_7)
	{ after(grammarAccess.getModelAccess().getContractAttributesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__8__Impl
	rule__Model__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOrganizationalModelAssignment_8()); }
	(rule__Model__OrganizationalModelAssignment_8)
	{ after(grammarAccess.getModelAccess().getOrganizationalModelAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__9__Impl
	rule__Model__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTasksModelAssignment_9()); }
	(rule__Model__TasksModelAssignment_9)
	{ after(grammarAccess.getModelAccess().getTasksModelAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractNetProtocolsAssignment_10()); }
	(rule__Model__ContractNetProtocolsAssignment_10)*
	{ after(grammarAccess.getModelAccess().getContractNetProtocolsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractType__Group_1__0__Impl
	rule__AbstractType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeAccess().getListTypeAssignment_1_0()); }
	(rule__AbstractType__ListTypeAssignment_1_0)
	{ after(grammarAccess.getAbstractTypeAccess().getListTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractType__Group_1__1__Impl
	rule__AbstractType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeAccess().getLessThanSignKeyword_1_1()); }
	'<'
	{ after(grammarAccess.getAbstractTypeAccess().getLessThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractType__Group_1__2__Impl
	rule__AbstractType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeAccess().getTypeAssignment_1_2()); }
	(rule__AbstractType__TypeAssignment_1_2)
	{ after(grammarAccess.getAbstractTypeAccess().getTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeAccess().getGreaterThanSignKeyword_1_3()); }
	'>'
	{ after(grammarAccess.getAbstractTypeAccess().getGreaterThanSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttributes__Group__0__Impl
	rule__ClassAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributesAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getClassAttributesAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttributes__Group__1__Impl
	rule__ClassAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getClassAttributesAccess().getAgentAttributesAssignment_1()); }
		(rule__ClassAttributes__AgentAttributesAssignment_1)
		{ after(grammarAccess.getClassAttributesAccess().getAgentAttributesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getClassAttributesAccess().getAgentAttributesAssignment_1()); }
		(rule__ClassAttributes__AgentAttributesAssignment_1)*
		{ after(grammarAccess.getClassAttributesAccess().getAgentAttributesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassAttributes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAttributesAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getClassAttributesAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrganizationalModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrganizationalModel__Group__0__Impl
	rule__OrganizationalModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrganizationalModelAccess().getOrganizationalModelKeyword_0()); }
	'OrganizationalModel'
	{ after(grammarAccess.getOrganizationalModelAccess().getOrganizationalModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrganizationalModel__Group__1__Impl
	rule__OrganizationalModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOrganizationalModelAccess().getAgentsAssignment_1()); }
		(rule__OrganizationalModel__AgentsAssignment_1)
		{ after(grammarAccess.getOrganizationalModelAccess().getAgentsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getOrganizationalModelAccess().getAgentsAssignment_1()); }
		(rule__OrganizationalModel__AgentsAssignment_1)*
		{ after(grammarAccess.getOrganizationalModelAccess().getAgentsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrganizationalModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrganizationalModelAccess().getEndOrganizationalModelKeyword_2()); }
	'end OrganizationalModel'
	{ after(grammarAccess.getOrganizationalModelAccess().getEndOrganizationalModelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__0__Impl
	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
	'Agent'
	{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__1__Impl
	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
	(rule__Agent__NameAssignment_1)
	{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__2__Impl
	rule__Agent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__3__Impl
	rule__Agent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getAttributeValuesAssignment_3()); }
	(rule__Agent__AttributeValuesAssignment_3)*
	{ after(grammarAccess.getAgentAccess().getAttributeValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TasksModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TasksModel__Group__0__Impl
	rule__TasksModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTasksModelAccess().getTasksModelKeyword_0()); }
	'TasksModel'
	{ after(grammarAccess.getTasksModelAccess().getTasksModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TasksModel__Group__1__Impl
	rule__TasksModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTasksModelAccess().getTasksAssignment_1()); }
		(rule__TasksModel__TasksAssignment_1)
		{ after(grammarAccess.getTasksModelAccess().getTasksAssignment_1()); }
	)
	(
		{ before(grammarAccess.getTasksModelAccess().getTasksAssignment_1()); }
		(rule__TasksModel__TasksAssignment_1)*
		{ after(grammarAccess.getTasksModelAccess().getTasksAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TasksModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTasksModelAccess().getEndTasksModelKeyword_2()); }
	'end TasksModel'
	{ after(grammarAccess.getTasksModelAccess().getEndTasksModelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getAttributeValuesAssignment_3()); }
	(rule__Task__AttributeValuesAssignment_3)*
	{ after(grammarAccess.getTaskAccess().getAttributeValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractNetProtocol__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__0__Impl
	rule__ContractNetProtocol__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getContractNetProtocalKeyword_0()); }
	'ContractNetProtocal'
	{ after(grammarAccess.getContractNetProtocolAccess().getContractNetProtocalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__1__Impl
	rule__ContractNetProtocol__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getNameAssignment_1()); }
	(rule__ContractNetProtocol__NameAssignment_1)
	{ after(grammarAccess.getContractNetProtocolAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__2__Impl
	rule__ContractNetProtocol__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getVariablesAssignment_2()); }
	(rule__ContractNetProtocol__VariablesAssignment_2)*
	{ after(grammarAccess.getContractNetProtocolAccess().getVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__3__Impl
	rule__ContractNetProtocol__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorsKeyword_3()); }
	'RoleBehaviors'
	{ after(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__4__Impl
	rule__ContractNetProtocol__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorAssignment_4()); }
	(rule__ContractNetProtocol__RoleBehaviorAssignment_4)*
	{ after(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__5__Impl
	rule__ContractNetProtocol__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getEndRoleBehaviorsKeyword_5()); }
	'end RoleBehaviors'
	{ after(grammarAccess.getContractNetProtocolAccess().getEndRoleBehaviorsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractNetProtocol__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractNetProtocolAccess().getEndContractNetProtocalKeyword_6()); }
	'end ContractNetProtocal'
	{ after(grammarAccess.getContractNetProtocolAccess().getEndContractNetProtocalKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleBehavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__0__Impl
	rule__RoleBehavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getRoleKeyword_0()); }
	'role'
	{ after(grammarAccess.getRoleBehaviorAccess().getRoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__1__Impl
	rule__RoleBehavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getNameAssignment_1()); }
	(rule__RoleBehavior__NameAssignment_1)
	{ after(grammarAccess.getRoleBehaviorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__2__Impl
	rule__RoleBehavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRoleBehaviorAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__3__Impl
	rule__RoleBehavior__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getActionsKeyword_3()); }
	'actions'
	{ after(grammarAccess.getRoleBehaviorAccess().getActionsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__4__Impl
	rule__RoleBehavior__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getRoleBehaviorAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__5__Impl
	rule__RoleBehavior__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getActionsAssignment_5()); }
	(rule__RoleBehavior__ActionsAssignment_5)*
	{ after(grammarAccess.getRoleBehaviorAccess().getActionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__6__Impl
	rule__RoleBehavior__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRoleBehaviorAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__7__Impl
	rule__RoleBehavior__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getStatesAssignment_7()); }
		(rule__RoleBehavior__StatesAssignment_7)
		{ after(grammarAccess.getRoleBehaviorAccess().getStatesAssignment_7()); }
	)
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getStatesAssignment_7()); }
		(rule__RoleBehavior__StatesAssignment_7)*
		{ after(grammarAccess.getRoleBehaviorAccess().getStatesAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__8__Impl
	rule__RoleBehavior__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getStartAtKeyword_8()); }
	'start at'
	{ after(grammarAccess.getRoleBehaviorAccess().getStartAtKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__9__Impl
	rule__RoleBehavior__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getStartStateAssignment_9()); }
	(rule__RoleBehavior__StartStateAssignment_9)
	{ after(grammarAccess.getRoleBehaviorAccess().getStartStateAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__10__Impl
	rule__RoleBehavior__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getStopAtKeyword_10()); }
	'stop at'
	{ after(grammarAccess.getRoleBehaviorAccess().getStopAtKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__11__Impl
	rule__RoleBehavior__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getEndStateAssignment_11()); }
	(rule__RoleBehavior__EndStateAssignment_11)
	{ after(grammarAccess.getRoleBehaviorAccess().getEndStateAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleBehavior__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleBehaviorAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getRoleBehaviorAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
	(rule__Attribute__TypeAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_2()); }
	(rule__Attribute__Group_2__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_2__0__Impl
	rule__Attribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDefaultKeyword_2_0()); }
	'default'
	{ after(grammarAccess.getAttributeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDefaultAssignment_2_1()); }
	(rule__Attribute__DefaultAssignment_2_1)
	{ after(grammarAccess.getAttributeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeValue__Group__0__Impl
	rule__AttributeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeValueAccess().getAttributeAssignment_0()); }
	(rule__AttributeValue__AttributeAssignment_0)
	{ after(grammarAccess.getAttributeValueAccess().getAttributeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeValue__Group__1__Impl
	rule__AttributeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeValueAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttributeValueAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
	(rule__AttributeValue__ValueAssignment_2)
	{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
	(rule__Variable__TypeAssignment_0)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableParserRuleCall_0()); }
	ruleVariable
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationVariableAction_1()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationVariableAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3()); }
	(rule__VariableDeclaration__ValueAssignment_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getInputsAssignment_3()); }
	(rule__Action__InputsAssignment_3)?
	{ after(grammarAccess.getActionAccess().getInputsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_4()); }
	(rule__Action__Group_4__0)*
	{ after(grammarAccess.getActionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__0__Impl
	rule__Action__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getActionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getInputsAssignment_4_1()); }
	(rule__Action__InputsAssignment_4_1)
	{ after(grammarAccess.getActionAccess().getInputsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_0__0__Impl
	rule__State__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getBackgroundStateAssignment_0_0()); }
	(rule__State__BackgroundStateAssignment_0_0)
	{ after(grammarAccess.getStateAccess().getBackgroundStateAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_0_1()); }
	(rule__State__NameAssignment_0_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__0__Impl
	rule__State__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_1_0()); }
	'state'
	{ after(grammarAccess.getStateAccess().getStateKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__1__Impl
	rule__State__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
	(rule__State__NameAssignment_1_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__2__Impl
	rule__State__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__3__Impl
	rule__State__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getVariablesAssignment_1_3()); }
	(rule__State__VariablesAssignment_1_3)*
	{ after(grammarAccess.getStateAccess().getVariablesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__4__Impl
	rule__State__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateAccess().getActivitiesAssignment_1_4()); }
		(rule__State__ActivitiesAssignment_1_4)
		{ after(grammarAccess.getStateAccess().getActivitiesAssignment_1_4()); }
	)
	(
		{ before(grammarAccess.getStateAccess().getActivitiesAssignment_1_4()); }
		(rule__State__ActivitiesAssignment_1_4)*
		{ after(grammarAccess.getStateAccess().getActivitiesAssignment_1_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_1_5()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__0__Impl
	rule__Activity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getDeclarationsAssignment_0()); }
	(rule__Activity__DeclarationsAssignment_0)*
	{ after(grammarAccess.getActivityAccess().getDeclarationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__1__Impl
	rule__Activity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getActivityAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__2__Impl
	rule__Activity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getActivityAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__3__Impl
	rule__Activity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getIfAssignment_3()); }
	(rule__Activity__IfAssignment_3)
	{ after(grammarAccess.getActivityAccess().getIfAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__4__Impl
	rule__Activity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getActivityAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__5__Impl
	rule__Activity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__6__Impl
	rule__Activity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getActivityAccess().getThenAssignment_6()); }
		(rule__Activity__ThenAssignment_6)
		{ after(grammarAccess.getActivityAccess().getThenAssignment_6()); }
	)
	(
		{ before(grammarAccess.getActivityAccess().getThenAssignment_6()); }
		(rule__Activity__ThenAssignment_6)*
		{ after(grammarAccess.getActivityAccess().getThenAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__7__Impl
	rule__Activity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getGroup_8()); }
	(rule__Activity__Group_8__0)?
	{ after(grammarAccess.getActivityAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group_8__0__Impl
	rule__Activity__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getActivityAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getAlternatives_8_1()); }
	(rule__Activity__Alternatives_8_1)
	{ after(grammarAccess.getActivityAccess().getAlternatives_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group_8_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group_8_1_1__0__Impl
	rule__Activity__Group_8_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_8_1_1_0()); }
	'{'
	{ after(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_8_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group_8_1_1__1__Impl
	rule__Activity__Group_8_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getActivityAccess().getElseAssignment_8_1_1_1()); }
		(rule__Activity__ElseAssignment_8_1_1_1)
		{ after(grammarAccess.getActivityAccess().getElseAssignment_8_1_1_1()); }
	)
	(
		{ before(grammarAccess.getActivityAccess().getElseAssignment_8_1_1_1()); }
		(rule__Activity__ElseAssignment_8_1_1_1)*
		{ after(grammarAccess.getActivityAccess().getElseAssignment_8_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group_8_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_8_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_8_1_1_2()); }
	'}'
	{ after(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_8_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_0()); }
	(rule__Condition__Group_0__0)
	{ after(grammarAccess.getConditionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_1()); }
	(rule__Condition__Group_1__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSubjectiveAssignment_0_0()); }
	(rule__Condition__SubjectiveAssignment_0_0)
	{ after(grammarAccess.getConditionAccess().getSubjectiveAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_0_1()); }
	(rule__Condition__OperatorAssignment_0_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getObjectiveAssignment_0_2()); }
	(rule__Condition__ObjectiveAssignment_0_2)
	{ after(grammarAccess.getConditionAccess().getObjectiveAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
	(rule__Condition__Alternatives_1_0)
	{ after(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getCompareConditionAssignment_1_1()); }
	(rule__Condition__CompareConditionAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getCompareConditionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getIsActionAssignment_0_0()); }
	(rule__Statement__IsActionAssignment_0_0)
	{ after(grammarAccess.getStatementAccess().getIsActionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getActionStatementAssignment_0_1()); }
	(rule__Statement__ActionStatementAssignment_0_1)
	{ after(grammarAccess.getStatementAccess().getActionStatementAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getIsChangeStateAssignment_1_0()); }
	(rule__Statement__IsChangeStateAssignment_1_0)
	{ after(grammarAccess.getStatementAccess().getIsChangeStateAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getChangeStateStatementAssignment_1_1()); }
	(rule__Statement__ChangeStateStatementAssignment_1_1)
	{ after(grammarAccess.getStatementAccess().getChangeStateStatementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionStatement__Group__0__Impl
	rule__ActionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionStatementAccess().getActionAssignment_0()); }
	(rule__ActionStatement__ActionAssignment_0)
	{ after(grammarAccess.getActionStatementAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionStatement__Group__1__Impl
	rule__ActionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getActionStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionStatement__Group__2__Impl
	rule__ActionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionStatementAccess().getInputsAssignment_2()); }
	(rule__ActionStatement__InputsAssignment_2)*
	{ after(grammarAccess.getActionStatementAccess().getInputsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getActionStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertStatement__Group__0__Impl
	rule__AssertStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertStatementAccess().getInputAssignment_0()); }
	(rule__AssertStatement__InputAssignment_0)
	{ after(grammarAccess.getAssertStatementAccess().getInputAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertStatement__Group__1__Impl
	rule__AssertStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertStatementAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssertStatementAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertStatementAccess().getValueAssignment_2()); }
	(rule__AssertStatement__ValueAssignment_2)
	{ after(grammarAccess.getAssertStatementAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeStateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStateStatement__Group__0__Impl
	rule__ChangeStateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStateStatementAccess().getStateKeyword_0()); }
	'state'
	{ after(grammarAccess.getChangeStateStatementAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStateStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStateStatementAccess().getTargetStateAssignment_1()); }
	(rule__ChangeStateStatement__TargetStateAssignment_1)
	{ after(grammarAccess.getChangeStateStatementAccess().getTargetStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getExpressionAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_1_0()); }
	(rule__Expression__Alternatives_1_0)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_1()); }
	(rule__Expression__RightAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_0__0__Impl
	rule__Expression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_1__0__Impl
	rule__Expression__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAlternatives_1_0()); }
	(rule__Term__Alternatives_1_0)
	{ after(grammarAccess.getTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightAssignment_1_1()); }
	(rule__Term__RightAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_0_0__0__Impl
	rule__Term__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMultiplyLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getTermAccess().getMultiplyLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getTermAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_0_1__0__Impl
	rule__Term__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getDivisionLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getDivisionLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getTermAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__0__Impl
	rule__Factor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__1__Impl
	rule__Factor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpressionAssignment_4_1()); }
	(rule__Factor__ExpressionAssignment_4_1)
	{ after(grammarAccess.getFactorAccess().getExpressionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
	(rule__QualifiedName__Group_2__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_2__0__Impl
	rule__QualifiedName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__AgentAttributesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAgentAttributesClassAttributesParserRuleCall_1_0()); }
		ruleClassAttributes
		{ after(grammarAccess.getModelAccess().getAgentAttributesClassAttributesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TaskAttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTaskAttributesClassAttributesParserRuleCall_3_0()); }
		ruleClassAttributes
		{ after(grammarAccess.getModelAccess().getTaskAttributesClassAttributesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BidAttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getBidAttributesClassAttributesParserRuleCall_5_0()); }
		ruleClassAttributes
		{ after(grammarAccess.getModelAccess().getBidAttributesClassAttributesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContractAttributesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContractAttributesClassAttributesParserRuleCall_7_0()); }
		ruleClassAttributes
		{ after(grammarAccess.getModelAccess().getContractAttributesClassAttributesParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OrganizationalModelAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOrganizationalModelOrganizationalModelParserRuleCall_8_0()); }
		ruleOrganizationalModel
		{ after(grammarAccess.getModelAccess().getOrganizationalModelOrganizationalModelParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TasksModelAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTasksModelTasksModelParserRuleCall_9_0()); }
		ruleTasksModel
		{ after(grammarAccess.getModelAccess().getTasksModelTasksModelParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContractNetProtocolsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContractNetProtocolsContractNetProtocolParserRuleCall_10_0()); }
		ruleContractNetProtocol
		{ after(grammarAccess.getModelAccess().getContractNetProtocolsContractNetProtocolParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getAbstractTypeAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__ListTypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeAccess().getListTypeListKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAbstractTypeAccess().getListTypeListKeyword_1_0_0()); }
			'List'
			{ after(grammarAccess.getAbstractTypeAccess().getListTypeListKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAbstractTypeAccess().getListTypeListKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractType__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeAccess().getTypeTypeParserRuleCall_1_2_0()); }
		ruleType
		{ after(grammarAccess.getAbstractTypeAccess().getTypeTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttributes__AgentAttributesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAttributesAccess().getAgentAttributesAttributeParserRuleCall_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getClassAttributesAccess().getAgentAttributesAttributeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationalModel__AgentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrganizationalModelAccess().getAgentsAgentParserRuleCall_1_0()); }
		ruleAgent
		{ after(grammarAccess.getOrganizationalModelAccess().getAgentsAgentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__AttributeValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getAttributeValuesAttributeValueParserRuleCall_3_0()); }
		ruleAttributeValue
		{ after(grammarAccess.getAgentAccess().getAttributeValuesAttributeValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TasksModel__TasksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTasksModelAccess().getTasksTaskParserRuleCall_1_0()); }
		ruleTask
		{ after(grammarAccess.getTasksModelAccess().getTasksTaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__AttributeValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getAttributeValuesAttributeValueParserRuleCall_3_0()); }
		ruleAttributeValue
		{ after(grammarAccess.getTaskAccess().getAttributeValuesAttributeValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNetProtocolAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractNetProtocolAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNetProtocolAccess().getVariablesVariableParserRuleCall_2_0()); }
		ruleVariable
		{ after(grammarAccess.getContractNetProtocolAccess().getVariablesVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractNetProtocol__RoleBehaviorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorRoleBehaviorParserRuleCall_4_0()); }
		ruleRoleBehavior
		{ after(grammarAccess.getContractNetProtocolAccess().getRoleBehaviorRoleBehaviorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__ActionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getActionsActionParserRuleCall_5_0()); }
		ruleAction
		{ after(grammarAccess.getRoleBehaviorAccess().getActionsActionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__StatesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getStatesStateParserRuleCall_7_0()); }
		ruleState
		{ after(grammarAccess.getRoleBehaviorAccess().getStatesStateParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__StartStateAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getStartStateStateCrossReference_9_0()); }
		(
			{ before(grammarAccess.getRoleBehaviorAccess().getStartStateStateIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRoleBehaviorAccess().getStartStateStateIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getRoleBehaviorAccess().getStartStateStateCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBehavior__EndStateAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleBehaviorAccess().getEndStateStateCrossReference_11_0()); }
		(
			{ before(grammarAccess.getRoleBehaviorAccess().getEndStateStateIDTerminalRuleCall_11_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRoleBehaviorAccess().getEndStateStateIDTerminalRuleCall_11_0_1()); }
		)
		{ after(grammarAccess.getRoleBehaviorAccess().getEndStateStateCrossReference_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeAbstractTypeParserRuleCall_0_0()); }
		ruleAbstractType
		{ after(grammarAccess.getAttributeAccess().getTypeAbstractTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getDefaultParameterParserRuleCall_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getAttributeAccess().getDefaultParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__AttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValueAccess().getAttributeAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAttributeValueAccess().getAttributeAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeValueAccess().getAttributeAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAttributeValueAccess().getAttributeAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValueAccess().getValueParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getAttributeValueAccess().getValueParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeAbstractTypeParserRuleCall_0_0()); }
		ruleAbstractType
		{ after(grammarAccess.getVariableAccess().getTypeAbstractTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__InputsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getInputsVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getInputsVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__InputsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getInputsVariableParserRuleCall_4_1_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getInputsVariableParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__BackgroundStateAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getBackgroundStateBackgroundStateKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getStateAccess().getBackgroundStateBackgroundStateKeyword_0_0_0()); }
			'backgroundState'
			{ after(grammarAccess.getStateAccess().getBackgroundStateBackgroundStateKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getStateAccess().getBackgroundStateBackgroundStateKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__VariablesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getVariablesVariableParserRuleCall_1_3_0()); }
		ruleVariable
		{ after(grammarAccess.getStateAccess().getVariablesVariableParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActivitiesAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActivitiesActivityParserRuleCall_1_4_0()); }
		ruleActivity
		{ after(grammarAccess.getStateAccess().getActivitiesActivityParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__DeclarationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getDeclarationsVariableDeclarationParserRuleCall_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getActivityAccess().getDeclarationsVariableDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__IfAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getIfConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getActivityAccess().getIfConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__ThenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getThenStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getActivityAccess().getThenStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__ElseifAssignment_8_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getElseifActivityParserRuleCall_8_1_0_0()); }
		ruleActivity
		{ after(grammarAccess.getActivityAccess().getElseifActivityParserRuleCall_8_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__ElseAssignment_8_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getElseStatementParserRuleCall_8_1_1_1_0()); }
		ruleStatement
		{ after(grammarAccess.getActivityAccess().getElseStatementParserRuleCall_8_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__EqualToAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getEqualToEqualsSignEqualsSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getEqualToEqualsSignEqualsSignKeyword_0_0()); }
			'=='
			{ after(grammarAccess.getOperatorAccess().getEqualToEqualsSignEqualsSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getEqualToEqualsSignEqualsSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__LargerThanAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getLargerThanGreaterThanSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getLargerThanGreaterThanSignKeyword_1_0()); }
			'>'
			{ after(grammarAccess.getOperatorAccess().getLargerThanGreaterThanSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getLargerThanGreaterThanSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__SmallerThanAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getSmallerThanLessThanSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getSmallerThanLessThanSignKeyword_2_0()); }
			'<'
			{ after(grammarAccess.getOperatorAccess().getSmallerThanLessThanSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getSmallerThanLessThanSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__LargerOrEqualToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getLargerOrEqualToGreaterThanSignEqualsSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getLargerOrEqualToGreaterThanSignEqualsSignKeyword_3_0()); }
			'>='
			{ after(grammarAccess.getOperatorAccess().getLargerOrEqualToGreaterThanSignEqualsSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getLargerOrEqualToGreaterThanSignEqualsSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__SmallerOrEqualToAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getSmallerOrEqualToLessThanSignEqualsSignKeyword_4_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getSmallerOrEqualToLessThanSignEqualsSignKeyword_4_0()); }
			'<='
			{ after(grammarAccess.getOperatorAccess().getSmallerOrEqualToLessThanSignEqualsSignKeyword_4_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getSmallerOrEqualToLessThanSignEqualsSignKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__NotEqualToAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getNotEqualToExclamationMarkEqualsSignKeyword_5_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getNotEqualToExclamationMarkEqualsSignKeyword_5_0()); }
			'!='
			{ after(grammarAccess.getOperatorAccess().getNotEqualToExclamationMarkEqualsSignKeyword_5_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getNotEqualToExclamationMarkEqualsSignKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__SubjectiveAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSubjectiveQualifiedNameParserRuleCall_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getConditionAccess().getSubjectiveQualifiedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorOperatorParserRuleCall_0_1_0()); }
		ruleOperator
		{ after(grammarAccess.getConditionAccess().getOperatorOperatorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ObjectiveAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getObjectiveExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getObjectiveExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__AndAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAndAndKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getAndAndKeyword_1_0_0_0()); }
			'and'
			{ after(grammarAccess.getConditionAccess().getAndAndKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getConditionAccess().getAndAndKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OrAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOrOrKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getOrOrKeyword_1_0_1_0()); }
			'or'
			{ after(grammarAccess.getConditionAccess().getOrOrKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getConditionAccess().getOrOrKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__CompareConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getCompareConditionConditionParserRuleCall_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionAccess().getCompareConditionConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IsActionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIsActionDoKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getIsActionDoKeyword_0_0_0()); }
			'Do'
			{ after(grammarAccess.getStatementAccess().getIsActionDoKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getIsActionDoKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ActionStatementAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getActionStatementActionStatementParserRuleCall_0_1_0()); }
		ruleActionStatement
		{ after(grammarAccess.getStatementAccess().getActionStatementActionStatementParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IsChangeStateAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIsChangeStateHyphenMinusGreaterThanSignKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getIsChangeStateHyphenMinusGreaterThanSignKeyword_1_0_0()); }
			'->'
			{ after(grammarAccess.getStatementAccess().getIsChangeStateHyphenMinusGreaterThanSignKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getIsChangeStateHyphenMinusGreaterThanSignKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ChangeStateStatementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getChangeStateStatementChangeStateStatementParserRuleCall_1_1_0()); }
		ruleChangeStateStatement
		{ after(grammarAccess.getStatementAccess().getChangeStateStatementChangeStateStatementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AssertStatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAssertStatementAssertStatementParserRuleCall_2_0()); }
		ruleAssertStatement
		{ after(grammarAccess.getStatementAccess().getAssertStatementAssertStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionStatementAccess().getActionActionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getActionStatementAccess().getActionActionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionStatementAccess().getActionActionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getActionStatementAccess().getActionActionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__InputsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionStatementAccess().getInputsQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getActionStatementAccess().getInputsQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__InputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertStatementAccess().getInputQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAssertStatementAccess().getInputQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertStatement__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertStatementAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssertStatementAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStateStatement__TargetStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStateStatementAccess().getTargetStateStateCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChangeStateStatementAccess().getTargetStateStateIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getChangeStateStatementAccess().getTargetStateStateIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChangeStateStatementAccess().getTargetStateStateCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getExpressionAccess().getRightTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getFactorAccess().getVariableQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__BooleanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getBooleanBOOLEANTerminalRuleCall_3_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getFactorAccess().getBooleanBOOLEANTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpressionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')+;

RULE_BOOLEAN : ('false'|'true');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
